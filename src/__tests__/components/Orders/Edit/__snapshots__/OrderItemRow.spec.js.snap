// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderItemRow renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <li
    className="order-item-row"
>
    <span
        className="order-item-row-item order-item-row-name"
    >
        Test Item
    </span>
    <span
        className="order-item-row-item order-item-row-quantity"
    >
        2
         @ 
        $0.05
    </span>
    <span
        className="order-item-row-item order-item-row-price"
    >
        $0.10
    </span>
    <button
        className="order-item-row-item remove-item-button"
        onClick={[Function]}
    >
        Remove
    </button>
</li>,
  "nodes": Array [
    <li
      className="order-item-row"
>
      <span
            className="order-item-row-item order-item-row-name"
      >
            Test Item
      </span>
      <span
            className="order-item-row-item order-item-row-quantity"
      >
            2
             @ 
            $0.05
      </span>
      <span
            className="order-item-row-item order-item-row-price"
      >
            $0.10
      </span>
      <button
            className="order-item-row-item remove-item-button"
            onClick={[Function]}
      >
            Remove
      </button>
</li>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <OrderItemRow
        handleRemoveItemClick={[Function]}
        item={
                Object {
                        "name": "Test Item",
                        "pricePerUnit": 5,
                        "quantity": 2,
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "handleRemoveItemClick": [Function],
          "item": Object {
            "name": "Test Item",
            "pricePerUnit": 5,
            "quantity": 2,
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <li
          className="order-item-row"
>
          <span
                    className="order-item-row-item order-item-row-name"
          >
                    Test Item
          </span>
          <span
                    className="order-item-row-item order-item-row-quantity"
          >
                    2
                     @ 
                    $0.05
          </span>
          <span
                    className="order-item-row-item order-item-row-price"
          >
                    $0.10
          </span>
          <button
                    className="order-item-row-item remove-item-button"
                    onClick={[Function]}
          >
                    Remove
          </button>
</li>,
        "_debugID": 2,
        "_renderedOutput": <li
          className="order-item-row"
>
          <span
                    className="order-item-row-item order-item-row-name"
          >
                    Test Item
          </span>
          <span
                    className="order-item-row-item order-item-row-quantity"
          >
                    2
                     @ 
                    $0.05
          </span>
          <span
                    className="order-item-row-item order-item-row-price"
          >
                    $0.10
          </span>
          <button
                    className="order-item-row-item remove-item-button"
                    onClick={[Function]}
          >
                    Remove
          </button>
</li>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <OrderItemRow
    handleRemoveItemClick={[Function]}
    item={
        Object {
            "name": "Test Item",
            "pricePerUnit": 5,
            "quantity": 2,
          }
    }
/>,
}
`;
