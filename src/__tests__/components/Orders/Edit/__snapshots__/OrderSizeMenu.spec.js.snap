// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderSizeMenu renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <span
    className="input-group"
>
    <label
        htmlFor="size"
    >
        Size: 
    </label>
    <select
        className="order-size-menu"
        id="size"
        name="size"
        onChange={[Function]}
        value={1}
    >
        <option
            value={0}
        >
            Small
        </option>
        <option
            value={1}
        >
            Medium
        </option>
        <option
            value={2}
        >
            Large
        </option>
    </select>
</span>,
  "nodes": Array [
    <span
      className="input-group"
>
      <label
            htmlFor="size"
      >
            Size: 
      </label>
      <select
            className="order-size-menu"
            id="size"
            name="size"
            onChange={[Function]}
            value={1}
      >
            <option
                  value={0}
            >
                  Small
            </option>
            <option
                  value={1}
            >
                  Medium
            </option>
            <option
                  value={2}
            >
                  Large
            </option>
      </select>
</span>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <OrderSizeMenu
        availableSizes={
                Array [
                        Object {
                          "name": "Small",
                          "price": 49,
                        },
                        Object {
                          "name": "Medium",
                          "price": 69,
                        },
                        Object {
                          "name": "Large",
                          "price": 89,
                        },
                      ]
        }
        handleSizeChange={[Function]}
        sizeIdx={1}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "availableSizes": Array [
            Object {
              "name": "Small",
              "price": 49,
            },
            Object {
              "name": "Medium",
              "price": 69,
            },
            Object {
              "name": "Large",
              "price": 89,
            },
          ],
          "handleSizeChange": [Function],
          "sizeIdx": 1,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <span
          className="input-group"
>
          <label
                    htmlFor="size"
          >
                    Size: 
          </label>
          <select
                    className="order-size-menu"
                    id="size"
                    name="size"
                    onChange={[Function]}
                    value={1}
          >
                    <option
                              value={0}
                    >
                              Small
                    </option>
                    <option
                              value={1}
                    >
                              Medium
                    </option>
                    <option
                              value={2}
                    >
                              Large
                    </option>
          </select>
</span>,
        "_debugID": 2,
        "_renderedOutput": <span
          className="input-group"
>
          <label
                    htmlFor="size"
          >
                    Size: 
          </label>
          <select
                    className="order-size-menu"
                    id="size"
                    name="size"
                    onChange={[Function]}
                    value={1}
          >
                    <option
                              value={0}
                    >
                              Small
                    </option>
                    <option
                              value={1}
                    >
                              Medium
                    </option>
                    <option
                              value={2}
                    >
                              Large
                    </option>
          </select>
</span>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <OrderSizeMenu
    availableSizes={
        Array [
            Object {
              "name": "Small",
              "price": 49,
            },
            Object {
              "name": "Medium",
              "price": 69,
            },
            Object {
              "name": "Large",
              "price": 89,
            },
          ]
    }
    handleSizeChange={[Function]}
    sizeIdx={1}
/>,
}
`;
